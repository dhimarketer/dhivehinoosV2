FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=dhivehinoos_backend.settings

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        postgresql-client \
        build-essential \
        libpq-dev \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r django && useradd -r -g django django

# Install Python dependencies
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

# Copy project
COPY . /app/

# Create necessary directories and set permissions
RUN mkdir -p /app/database /app/static /app/logs \
    && chown -R django:django /app

# Collect static files as root (will switch to django user later)
RUN python manage.py collectstatic --noinput

# Create startup script to ensure media directory permissions
RUN echo '#!/bin/bash\n\
# Create media directories and fix ownership\n\
mkdir -p /app/media/articles /app/media/ads\n\
chown -R django:django /app/media\n\
chmod -R 777 /app/media\n\
# Switch to django user and start Django server\n\
exec su -s /bin/bash django -c "cd /app && python manage.py runserver 0.0.0.0:8000"' > /app/start.sh && chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/articles/published/ || exit 1

# Expose port
EXPOSE 8000

# Run the application
CMD ["/app/start.sh"]
