# Generated by Django 5.2.7 on 2025-10-10 15:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('articles', '0004_category_article_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublishingSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this schedule configuration', max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this schedule is currently active')),
                ('frequency', models.CharField(choices=[('instant', 'Instant'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('custom', 'Custom Interval')], default='instant', max_length=20)),
                ('custom_interval_minutes', models.PositiveIntegerField(blank=True, help_text="Custom interval in minutes (only used when frequency is 'custom')", null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10080)])),
                ('forbidden_hours_start', models.TimeField(blank=True, help_text='Start of forbidden hours (e.g., 22:00 for 10 PM)', null=True)),
                ('forbidden_hours_end', models.TimeField(blank=True, help_text='End of forbidden hours (e.g., 08:00 for 8 AM)', null=True)),
                ('max_articles_per_day', models.PositiveIntegerField(blank=True, help_text='Maximum articles to publish per day (leave empty for no limit)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('queue_priority', models.PositiveIntegerField(default=0, help_text='Priority for this schedule (higher number = higher priority)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Publishing Schedule',
                'verbose_name_plural': 'Publishing Schedules',
                'ordering': ['-queue_priority', 'name'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='publishing_mode',
            field=models.CharField(choices=[('instant', 'Instant'), ('scheduled', 'Scheduled')], default='instant', help_text='How this article should be published', max_length=20),
        ),
        migrations.AddField(
            model_name='article',
            name='scheduled_publish_time',
            field=models.DateTimeField(blank=True, help_text="When this article should be published (only used if publishing_mode is 'scheduled')", null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('scheduled', 'Scheduled')], default='draft', max_length=20),
        ),
        migrations.CreateModel(
            name='ScheduledArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('scheduled', 'Scheduled'), ('published', 'Published'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('scheduled_publish_time', models.DateTimeField(help_text='When this article should be published')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Priority within the schedule')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True, help_text="Reason for failure if status is 'failed'")),
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_publish', to='articles.article')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_articles', to='articles.publishingschedule')),
            ],
            options={
                'verbose_name': 'Scheduled Article',
                'verbose_name_plural': 'Scheduled Articles',
                'ordering': ['scheduled_publish_time', '-priority'],
            },
        ),
    ]
