# Generated by Django 5.2.7 on 2025-10-19 12:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('articles', '0006_article_proposed_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='article',
            name='image_source',
            field=models.CharField(choices=[('generated', 'AI Generated'), ('reused', 'Reused from Library'), ('external', 'External URL')], default='external', help_text='Source of the article image', max_length=20),
        ),
        migrations.CreateModel(
            name='ImageReuseSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_verify_high_confidence', models.BooleanField(default=True, help_text='Automatically verify images with high confidence scores')),
                ('high_confidence_threshold', models.FloatField(default=0.9, help_text='Confidence threshold for auto-verification (0.0 to 1.0)')),
                ('require_manual_verification', models.BooleanField(default=False, help_text='Require manual verification for all image matches')),
                ('verification_required_for', models.JSONField(default=list, help_text='Entity types that require manual verification')),
                ('prefer_verified_images', models.BooleanField(default=True, help_text='Prefer verified images over unverified ones')),
                ('allow_unverified_fallback', models.BooleanField(default=True, help_text='Allow fallback to unverified images if no verified ones available')),
                ('notify_on_pending_verification', models.BooleanField(default=True, help_text='Send email notifications for pending verifications')),
                ('verification_email_recipients', models.JSONField(default=list, help_text='Email addresses to notify about pending verifications')),
                ('politician_name_patterns', models.JSONField(default=list, help_text='Regex patterns for extracting politician names')),
                ('institution_name_patterns', models.JSONField(default=list, help_text='Regex patterns for extracting institution names')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated these settings', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Image Reuse Settings',
                'verbose_name_plural': 'Image Reuse Settings',
            },
        ),
        migrations.CreateModel(
            name='ReusableImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_name', models.CharField(help_text='Primary name of the person or entity', max_length=255)),
                ('entity_type', models.CharField(choices=[('politician', 'Politician'), ('institution', 'Institution'), ('organization', 'Organization'), ('public_figure', 'Public Figure'), ('other', 'Other')], help_text='Type of entity this image represents', max_length=50)),
                ('image_file', models.ImageField(help_text='The actual image file', upload_to='reusable_images/')),
                ('image_url', models.URLField(blank=True, help_text='Original URL if image was downloaded from external source', null=True)),
                ('image_variant', models.CharField(choices=[('portrait', 'Portrait'), ('official', 'Official'), ('casual', 'Casual'), ('group', 'Group'), ('exterior', 'Exterior'), ('interior', 'Interior'), ('logo', 'Logo'), ('banner', 'Banner'), ('default', 'Default')], default='default', help_text='Type/variant of the image', max_length=50)),
                ('image_sequence', models.PositiveIntegerField(default=1, help_text='Sequence number for multiple images of same entity/variant')),
                ('slug', models.SlugField(help_text='Auto-generated unique identifier', unique=True)),
                ('display_name', models.CharField(help_text='Human-readable display name', max_length=255)),
                ('alternative_names', models.JSONField(default=list, help_text='Alternative names, nicknames, titles')),
                ('name_variations', models.JSONField(default=list, help_text='Name variations in different languages')),
                ('tags', models.TextField(blank=True, help_text='Comma-separated tags for searching')),
                ('description', models.TextField(blank=True, help_text='Description of the image')),
                ('source', models.CharField(blank=True, help_text='Source of the image (AI Generated, Official Photo, etc.)', max_length=100)),
                ('is_verified', models.BooleanField(default=False, help_text='Whether this image has been verified by admin')),
                ('verified_at', models.DateTimeField(blank=True, help_text='When this image was verified', null=True)),
                ('verification_notes', models.TextField(blank=True, help_text='Admin notes about verification')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this image is available for use')),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times this image has been used')),
                ('last_used', models.DateTimeField(blank=True, help_text='When this image was last used', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_by', models.ForeignKey(blank=True, help_text='Admin user who verified this image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reusable Image',
                'verbose_name_plural': 'Reusable Images',
                'ordering': ['entity_name', 'image_sequence'],
                'unique_together': {('entity_name', 'image_variant', 'image_sequence')},
            },
        ),
        migrations.CreateModel(
            name='ImageVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('needs_revision', 'Needs Revision')], default='pending', help_text='Current verification status', max_length=20)),
                ('confidence_score', models.FloatField(blank=True, help_text='Confidence score from matching algorithm (0.0 to 1.0)', null=True)),
                ('matched_name', models.CharField(help_text='The name that was matched in the article', max_length=255)),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='When this verification was reviewed', null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Admin notes about the verification')),
                ('auto_approved', models.BooleanField(default=False, help_text='Whether this was auto-approved by the system')),
                ('auto_approval_reason', models.CharField(blank=True, help_text='Reason for auto-approval', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(help_text='The article that triggered this verification', on_delete=django.db.models.deletion.CASCADE, related_name='image_verifications', to='articles.article')),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='Admin user who reviewed this verification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_verifications', to=settings.AUTH_USER_MODEL)),
                ('reusable_image', models.ForeignKey(help_text='The image being verified', on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='articles.reusableimage')),
            ],
            options={
                'verbose_name': 'Image Verification',
                'verbose_name_plural': 'Image Verifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='reused_image',
            field=models.ForeignKey(blank=True, help_text='Reusable image used for this article', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='used_in_articles', to='articles.reusableimage'),
        ),
    ]
